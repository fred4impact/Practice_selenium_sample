Steps to create Project Framework

1-  Create a maven project
2-  Add required Dependencies from www.mvnreporsitory.com
3-  Inside  src -> java create page package
4 - Create a java class eg homePage.java
5 - Add the objects elements & methods & constructors of the home pages using @FindBy

6 -  Inside  src -> java create Test Package
7-  - Create  Testcase_Homepage.Java where you can use all your TestNG annotations

8- Inside  src -> java create TestBase package
9- Inside the Test package create a base.java class where you add all your
driver, browser and other methods required in your tests.







TestNG.xm
help to run all your test at once or
by group,
parallel ,
by class method,
packages
Include test to run
exclude test to run

How to create TestNG.xml file
got to preference -- settings --> plugins install Testng.xml
restart system
-- right click on your project folder
-- choose create TestNG.xml




Framework structure
-- create new maven project
-- Add dependecies / selenium java , testNg , mvnrepository
-- create you framework folder structure



TestNG --- Test Next Generation

Topics:
*******
Types of Testing TestNG can be used for
Unit , Integration, E2E, APi, UI

*****
Steps to Quick start a test in TestNG
•	1: Write the business logic of your test and insert TestNG annotations in your code.
•   2: Create TesNG.xml file and add the information of your tests in it
•	3: Run TestNG tests.

Annotations in TestNG
they are group into
-- Pre-condition ******

      @BeforeSuite:
      @BeforeTest:
      @BeforeGroups:
      @BeforeClass:
      @BeforeMethod:

-- Condition to test  ******
       @Test

-- Post condition ****
       @AfterSuite:
       @AfterTest:
       @AfterGroups:
       @AfterClass:
       @AfterMethod:

********

@Test()	other attributes you can use in a class or a method as part of the test.
	-- alwaysRun
	-- dataProvider 	The name of the data provider for this test method.
	-- dataProviderClass 	The class where to look for the data provider. If not specified, the data provider will be looked on the class of the current test method or one of its base classes. If this attribute is specified, the data provider method needs to be static on the specified class.
	--- dependsOnGroups 	The list of groups this method depends on.
	-- dependsOnMethods 	The list of methods this method depends on.
	--- description 	The description for this method.
    -- 	enabled
    -- parameter
    -- expectedExceptions
    -- groups
    -- invocationCount
    -- 	invocationTimeOut
    --  priority
    --  successPercentage
    -- 	singleThreaded
    --- timeOut
    --- threadPoolSize


    ***********

    TESTNG.XML

    <!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd" >

    <suite name="Suite1" verbose="1" >
      <test name="Nopackage" >
        <classes>
           <class name="NoPackageTest" />
        </classes>
      </test>

      <test name="Regression1">
        <classes>
          <class name="test.sample.ParameterSample"/>
          <class name="test.sample.ParameterTest"/>
        </classes>
      </test>
    </suite>

**
run with package

<suite name="Suite1" verbose="1" >
  <test name="Regression1"   >
    <packages>
      <package name="test.sample" />
   </packages>
 </test>
</suite>

***

You can also specify groups and methods to be included and excluded:



<test name="Regression1">
  <groups>
    <run>
      <exclude name="brokenTests"  />
      <include name="checkinTests"  />
    </run>
  </groups>

  <classes>
    <class name="test.IndividualMethodsTest">
      <methods>
        <include name="testMethod" />
      </methods>
    </class>
  </classes>
</test>


Turn off the preserve order and the Test will not run in the other at which they run

<test name="Regression1" preserve-order="false">
  <classes>

    <class name="test.Test1">
      <methods>
        <include name="m1" />
        <include name="m2" />
      </methods>
    </class>

    <class name="test.Test2" />

  </classes>
</test>






